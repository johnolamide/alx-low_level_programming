# Makefile for building the 'school' executable

# Compiler and compiler flags
CC = gcc
CFLAGS = -Wall -Werror -Wextra -pedantic

# Source files
SRC = main.c school.c

# Object files (auto-generated from SRC)
OBJ = $(SRC:.c=.o)

# Executable name
NAME = school

# Program to delete files
RM = rm -f

# Rule to build the executable
all: $(NAME)

# Rule to build the executable using object files
$(NAME): $(OBJ)
	$(CC) $(CFLAGS) -o $@ $^

# Rule to compile .c files into .o files
.c.o:
	$(CC) $(CFLAGS) -c -o $@ $<

# Clean rule to remove object files and the executable
clean:
	$(RM) $(OBJ) $(NAME) *~ \#*\#

# Rule to remove object files
oclean:
	$(RM) $(OBJ)

# Rule to remove object files, executable, and temporary files
fclean: clean oclean

# Rule to recompile all source files
re: fclean all

# Check if m.h file exists before proceeding with compilation
ifeq ($(wildcard m.h),)
$(OBJ): m.h
endif

# Phony targets to prevent conflicts with file names
.PHONY: all clean oclean fclean re

